/* CSS Modern Reset */

/* 1. Use a more-intuitive box-sizing model */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* 2. Remove default margin */
* {
  margin: 0;
}

/* 3. Enable keyword animations */
@media (prefers-reduced-motion: no-preference) {
  html {
    interpolate-size: allow-keywords;
  }
}

body {
  /* 4. Add accessible line-height */
  line-height: 1.5;
  /* 5. Improve text rendering */
  -webkit-font-smoothing: antialiased;
}

/* 6. Improve media defaults */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/* 7. Inherit fonts for form controls */
input,
button,
textarea,
select {
  font: inherit;
}

/* 8. Avoid text overflows */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/* 9. Improve line wrapping */
p {
  text-wrap: pretty;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
}

/*
  10. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}

html {
  height: 110vh;
}

body {
  display: grid;
  grid-template-columns: minmax(max-content, 16vw) 1fr;
  grid-template-rows: 10% 90%;
  grid-template-areas:
    "sidebar header"
    "sidebar main";
  height: 100%;
  transition: all 0.2s ease;
}

.material-symbols-outlined {
  font-size: 22px;
  line-height: 1.5;
  font-variation-settings: "FILL" 0, "wght" 400, "GRAD" 0, "opsz" 20;
}

.header {
  grid-area: header;
  display: grid;
  grid-template-columns: max-content 1fr;
  grid-template-rows: 1fr;
}

.header .top-sidebar {
  grid-column: 1 / 2;
  grid-row: 1;
  justify-self: start;
}

.header h1 {
  grid-column: 2 / 3;
  justify-self: center;
}

/* MAIN */

.main {
  grid-area: main;
  display: grid;
  grid-template-rows: max-content max-content max-content;
  row-gap: 20px;
  padding: 0 4vw;
  margin-bottom: 20px;
  justify-content: center;
}

/* Tasks container */

.tasks-div {
  display: grid;
  row-gap: 16px;
  align-self: center;
}

/* Task Details */

.task-details-container {
  display: grid;
  grid-template-columns: max-content minmax(max-content, 1fr) max-content max-content;
  grid-template-rows: max-content max-content;
  column-gap: 12px;
  min-width: 100%;
  width: 55vw;
  padding: 8px 20px;
  border-radius: 8px;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 2px 4px;
  transition: transform 0.25s ease, box-shadow 0.25s ease;
}

.task-details-container:hover {
  cursor: pointer;
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.checkbox {
  grid-area: 1 / 1 / 2 / 2;
  align-self: center;
}

.task-title {
  grid-area: 1 / 2 / 2 / 3;
  align-self: center;
  font-size: 18px;
  font-weight: 700;
}

.task-date {
  grid-area: 2 / 2 / 3 / 3;
  font-size: 14px;
  color: hsl(0, 0%, 50%);
  font-style: italic;
}

.task-edit-btn,
.task-delete {
  color: hsl(0, 0%, 40%);
}

.task-edit-btn.material-symbols-outlined:hover,
.task-delete:hover {
  color: hsl(0, 0%, 65%);
  cursor: pointer;
}

/* Task Forms */

.task-form {
  display: grid;
  grid-template-columns: 1fr max-content;
  grid-template-rows: max-content max-content max-content max-content;
  grid-template-areas:
    "title title"
    "actions actions"
    "line line"
    "project buttons";
  row-gap: 10px;
  min-width: max-content;
  width: 55vw;
  border: 1px solid #b0b0b0;
  border-radius: 8px;
  padding: 20px;
  position: relative;
}

.task-form input,
.task-form select {
  border: none;
  outline: none;
}

.title-input {
  grid-area: title;
  justify-self: start;
  width: 100%;
  font-size: 18px;
  font-weight: 600;
}

.title-input::placeholder {
  font-weight: 600;
  font-size: 18px;
  color: #9d9d9d;
}

.task-actions {
  grid-area: actions;
  display: grid;
  grid-template-columns: max-content max-content;
  column-gap: 24px;
}

.date-input::-webkit-calendar-picker-indicator {
  margin-left: -12px;
  padding: 0;
}

.line {
  position: absolute;
  left: 0;
  right: 0;
  border-top: 1px solid #b0b0b0;
  bottom: 40%;
  z-index: 1;
}

.select-project {
  grid-area: project;
  justify-self: start;
  background-color: white;
}

.select-priority {
  background-color: white;
}

.task-btns {
  grid-area: buttons;
  display: flex;
  gap: 8px;
}

.task-btns button {
  border: none;
  font-weight: 700;
  font-size: 15px;
  padding: 4px 16px;
  border-radius: 6px;
}

.cancel-btn {
  background-color: hsl(0, 0%, 94%);
  color: rgb(80, 80, 80);
}

.add-task-btn {
  background-color: hsl(5, 72%, 52%);
  color: white;
}

/* SIDEBAR */

.sidebar {
  grid-area: sidebar;
  display: grid;
  grid-template-rows: max-content max-content max-content;
  row-gap: 16px;
  width: 250px;
  overflow: hidden;
  background-color: hsl(30, 40%, 97%);
  transition: transform 0.2s ease;
}

.collapse-sidebar {
  transform: translateX(-100%);
}

.collapse-grid {
  grid-template-columns: 0 1fr;
}

/* Sidebar Containers */

.projects,
.task-categories {
  display: grid;
  padding: 0 16px 0 16px;
}

/* Sidebar Elements */

.top-sidebar {
  display: flex;
  justify-content: end;
  padding: 8px 16px 0 0;
}

.top-sidebar .material-symbols-outlined:hover {
  color: gray;
  cursor: pointer;
}

.task-categories div,
.projects div {
  font-size: 18px;
  padding: 8px 0 8px 8px;
  border-radius: 4px;
}

.task-categories div:hover:not(.active-sidebar-project),
.projects div:hover:not(.active-sidebar-project) {
  background-color: hsl(0, 0%, 90%);
  cursor: pointer;
}

.sidebar .add-task-btn {
  border: none;
  background-color: hsl(30, 40%, 97%);
}

.add-task-btn:hover .hover {
  font-variation-settings: "FILL" 1, "wght" 700;
  color: hsl(0, 0%, 60%);
}

.add-project:hover .material-symbols-outlined {
  cursor: pointer;
}

.add-project {
  justify-content: space-between;
}

.edit-task-form {
  display: none;
}

.new-project-form {
  display: none;
}

/* Helper Classes */

.active-sidebar-project {
  color: hsl(5, 72%, 52%);
  background-color: #ffefe5;
}

.flexbox {
  display: flex;
  align-items: center;
  gap: 5px;
}

.checkbox {
  width: 20px;
  height: 20px;
  border: 1.5px solid hsl(0, 0%, 65%);
  border-radius: 10px;
  display: inline-block;
  cursor: pointer;
  transition: background 0.2s;
}

.checkbox.checked {
  background: rgb(8, 55, 158);
  border: none;
  position: relative;
}

.checkbox.checked::after {
  content: "âœ”";
  color: white;
  font-size: 14px;
  position: absolute;
  top: 2px;
  left: 4px;
}
